Client_Server
1) Прочиать про клиент-серверную архитектуру

 Архитектура божет быть двухуровневая, трехуровневая и многоуровневая
 - Двухуровневая состоит из пары клиент-сервер
 - Трехуровневая состоит из клиент-сервер-БД
 - Многоуровневая состоит из клиент-балансировщик-несколько серверов-БД(или несколько)

 - Клиент - обычно браузер, но может быть другое ПО и даже сервер, отправляющий запрос на сервер.
   Клиент может быть толстый и тонкий.
   Тонкий - основные вычислительные операции выполняются на сервере. Клиент только отправляет данные и отображает результат.
   Толстый - основные операции выполняются на машине-клиенте, сервер служит хранилищем данных или производит ресурсоемкие операции.
 - Сервер - ПО/мощьный компьютер обрабатывающий запросы от клиентов и отправляющий им ответ. Может выступать клиентом при обращении к другим серверам.
 - База данных - хранилище информации, обычно расположена на отдельном компьютере. К ней обращается сервер для получения данных, их последующей обработке и отправки клиенту.
 
2) Что такое HTTP и HTTPS

 HTTP и HTTPS - протоколы передачи данных между клиентом и сервером основанные на запросах(Request) и ответах(Respond)
 - HTTP Hyper Text Transfer Protocol - передает информацию без защиты, с максимально возможной скоростью
 - HTTPS Hyper Text Transfer Protocol Secure - передает информацию с использованием шифрования SSL(secure socets layer)/TLS(transport layer security).
   Сайты имеют уникальный сертификат. При обращении к сайту он дает клиенту данные о сертификате и публичный ключ. Сертификат проверяется в центре сертификации.
   Публичный ключ является частью асиметричного ключа, он позволяет шифровать данные идущие от пользователя и расшифровывать их с помощью частного ключа на сервере.
   

3) HTTP методы
   HTTP методы - методы запроса указывающие желаемое действие от адресата запроса.
   Могут быть безопасными, идемпонентными, неидемпонентными.
 - Безопасные(GET, HEAD, OPTIONS) - не изменяют данные
 - Идемпонентные (GET, HEAD, PUT, DELETE, OPTIONS, TRACE) - при повторном выполнении результат будет одинаков
 - Неидемпонентные(POST, PATCH) - при повторном выполнении результат будет разным.
 
 - GET запрашивает данные ресурса
 - OPTIONS запрашивает информацию о поддерижваемых методах
 - HEAD аналогичен GET но ответ без тела
 - POST создает ресурс на сервере
 - PUT изменяет все содержимое ресурса
 - PATCH изменяет часть содержимого ресурса
 - DELETE удаляет ресурс
 - TRACE возвращает служебную информацию
 - CONNECT открывает TCP/IP туннель к серверу.

4) HTTP статус коды сервера
 - 100-199 - информационные
 - 200-299 - успешные
 - 300-399 - перенаправление
 - 400-499 - клиентская ошибка
 - 500-599 - серверная ошибка

5) Что такое ядро браузера 
 Программа обрабатывающая загруженную HTML-страницу и переобразующая код в вид удобный для пользователя.
6) Какие браузеры какиие ядра используют
 EdgeHTML - MS Edge
 Gecko - Firefox Tor
 WebKit - Safari
 Blink - Chromium
7) Что такое API
 API (Application Programming Interface) интерфейс взаимодействия систем как внутри приложения так и между ними.
 Позволяет обмениваться данными между двумя разными приложениями или сервисами и выполнять функции связанные с обеими сторонами процесса скрывая само строение и логику работы участников.

8. Что такое эндпоинты
 Endpoint - адрес(шлюз) на который опсылаются запросы для взаимодействия с API
9) URL (URI, URL, URN)
 - URI(Uniform Resource Identifier) последовательность символов идентифицирующая ресурс. Может содержать местоположение ресурса(URL) или его имя(URN), а может оба вместе.
 - URN(Uniform Resource Name) - уникальное имя объекта. Включает в себя название пространства имен и уникальный идентификатор в этом пространстве
 - URL(Uniform Resource Locator) уникальный адрес ресурса в Интернет
   Состоит из нескольких частей: Протокол(http, https, mailto, ftp), доменное имя или IP-адрес, порт(:80), адрес ресурса на сервере, доп параметры для исполнения доп команд, якорь(#) на другую часть ресурса.
10) Идемпотентные HTTP методы
 Идемпонентные методы HTTP запроса при каждом запросе дают идентичный результат. Это методы GET, HEAD, PUT, DELETE, OPTIONS, TRACE. При этом учитывается только фактическое состояние сервера, а не его ответ.

11) Безопасные HTTP методы
 Метод является безопасным, если не изменяет состояние сервера. GET, HEAD, OPTIONS. Но при этих методах сервер может сохранять статистику.

12) Иденфикация, Аутентификация, Авторизация
 - Идентификация - процесс в результате которого субъект однозначно определяется в информационном поле.
 - Аутентификация - процесс проверки подлинности субъекта.
 - Авторизация - предоставление субъекту прав на выполнение определенных действий, обычно в результате аутентификации.
13) Что такое IP
 IP(Internet Protocol) - цифровой идентификатор устройства в сети на основе протокола TCP/IP.
14) Что такое октет в DNS
 Октет - одна из 4х частей записи IP адреса в виде десятичных чисел разделенных точками. Состоит из 8ми двоичных цифр или 3х десятичных. 
15) Что такое порт, сколько портов у Linux сервера
 Порт сервера - идентификатор программы или процесса на сервере. Является натуральным числом от 0 до 65535, 16 бит.
 Linux имеет 3 типа сетевых портов:
 0-1023 - для ОС и основных сервисов
 1024-49151 - для приложений, служб и пользователей
 49152-65535 - динамические порты
 
16) Уровни OSI
 OSI(Open Systems Interconnection model) имеет 7 уровней
 1) Физический обмен физическими сингалами между устройствами в битах.
 2) Канальный формирует фреймы с адресом отправителя и получателя и отправляет х по сети. Решает проблему переадресации.
 3) Сетевой - маршрутизация от одного устройства к другому с учетом все неполадок сети.
 4) Транспортный транспортировка пакетов данных по разным протоколам
 5) Сеансовый(сессии) отвечает за поддержку сеанса связи. Управляет взаимодействием между приложениями.
 6) Представления представление данных в понятном виде для человека или машины. Шифрование данных.
 7) Прикладной(приложений) то с чем взаимодействует пользователь. 

17) Хедеры http запросов
 Заголовки HTTP могут содержать описание данных и информацию, необходимую для взаимодействия между клиентом и сервером.
 В них содержится название и после ":" значение.
 
